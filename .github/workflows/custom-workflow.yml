name: Build
on:
  push:
    branches:
      - sonar_branch # or the name of your main branch
      
env:
  SONAR_TOKEN: squ_92ce500b4383353ef21219293c07ffff35128a09
  SONAR_HOST_URL: http://54.73.70.164:9000
  SONAR_PROJECT_KEY: sonar_test
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      sonar.projectKey: testsonar
    steps:
      #- name: Create SonarQube project
      #  run: |
      #   curl --include --request POST -u ${{ env.SONAR_TOKEN }}: '${{ env.SONAR_HOST_URL }}/api/projects/create?name=${{ env.SONAR_PROJECT_KEY }}&project=${{ env.SONAR_PROJECT_KEY }}'
      
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      #- name: Create SonarQube properties file
      #  run: echo "sonar.projectKey=${{ env.SONAR_PROJECT_KEY }}" > sonar-project.properties
          
      - name: Generate code coverage report
        run: |
          # Replace this with the command to generate your code coverage report
          echo "Generating code coverage report..."
          ls
          npx nyc --reporter=lcov mocha  **/**/*.js --timeout 50000 --env local -a --exit || true
          ls
          rm -rf node_modules
          cd coverage
          cat lcov.info
          ls
        
      - name: Send code coverage data to SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        with:
          sonar-token: ${{ env.SONAR_TOKEN }}
          sonar-host-url: ${{ env.SONAR_HOST_URL }}
          extra-properties: |
            sonar.javascript.lcov.reportPaths=coverage/lcov.info
            
            
 #     - uses: sonarsource/sonarqube-scan-action@master
 #       with:
 #         sonar-token: ${{ env.SONAR_TOKEN }}
 #         sonar-host-url: ${{ env.SONAR_HOST_URL }}
